---

- name: symlink remnux fake-forms into webserver root tree
  ansible.builtin.file:
    src: /usr/share/remnux/fake-forms
    dest: /var/www/fake-forms
    mode: '0755'
    state: link

- name: Check /usr/share/remnux/remnux-tools-sheet.html exists
  ansible.builtin.stat: path=/usr/share/remnux/remnux-tools-sheet.html
  register: remnuxshare1
- name: Map remnux tools sheet on desktop
  ansible.builtin.file:
    src: /usr/share/remnux/remnux-tools-sheet.html
    path: "/home/{{ remnux_user }}/Desktop/REMnux Tools Sheet"
    mode: '0644'
    state: link
  when: remnuxshare1.stat.exists
- name: Check /usr/share/remnux/remnux-malware-analysis-tips.pdf exists
  ansible.builtin.stat: path=/usr/share/remnux/remnux-malware-analysis-tips.pdf
  register: remnuxshare2
- name: Map remnux tips on desktop
  ansible.builtin.file:
    src: /usr/share/remnux/remnux-malware-analysis-tips.pdf
    path: "/home/{{ remnux_user }}/Desktop/REMnux CheatSheet"
    mode: '0644'
    state: link
  when: remnuxshare2.stat.exists

- name: Check if vol.py exists
  ansible.builtin.stat:
    path: /usr/bin/vol.py
  register: volpy
- name: Setting up symlinks - vol.py
  ansible.builtin.file: src=/usr/bin/vol.py dest=/usr/bin/vol mode=0755 state=link
  when: volpy.stat.exists
- name: Setting up symlinks, permissions and options for useful tools
  ansible.builtin.file:
    src: /dev/null
    dest: /etc/inspircd/inspircd.motd
    mode: '0644'
- name: Configure remnux /etc/inspircd/inspircd.conf
  ansible.builtin.file:
    src: /usr/share/remnux/inspircd.conf
    dest: /etc/inspircd/inspircd.conf
    mode: '0644'
- name: Ensure epic5 configured with localhost
  ansible.builtin.replace:
    dest: /etc/epic5/servers
    regexp: '^irc.debian.org:6667'
    replace: 'localhost:6667'
    mode: '0644'
- name: Configure remnux scalpel.conf
  ansible.builtin.file:
    src: /usr/share/remnux/scalpel.conf
    dest: /etc/scalpel/scalpel.conf
    mode: '0644'
- name: Ensure wireshark user config directory exists
  ansible.builtin.file: path=/home/{{ remnux_user }}/.wireshark owner={{ remnux_user }} state=directory mode=0700
- name: Configure remnux wireshark user config
  ansible.builtin.copy:
    src: /usr/share/remnux/wireshark-preferences
    dest: "/home/{{ remnux_user }}/.wireshark/preferences"
    owner: "{{ remnux_user }}"
    mode: '0600'

- import_tasks: procdot.yml

- name: use remnux scite user configuration
  ansible.builtin.copy:
    src: /usr/share/remnux/scite.conf
    dest: "/home/{{ remnux_user }}/.SciTEUser.properties"
    owner: "{{ remnux_user }}"
    mode: '0600'
- name: Check /var/log/network-miner directory exists
  ansible.builtin.file: path=/var/log/network-miner state=directory mode=01777
- name: Symlink network-miner log directory
  ansible.builtin.file: src=/var/log/network-miner dest=/opt/remnux-network-miner/AssembledFiles mode=0755 state=link force=yes
- name: Check /opt/remnux-network-miner/Captures directory exists
  ansible.builtin.file: path=/opt/remnux-network-miner/Captures state=directory mode=01777
- name: Check user edb config directory exists
  ansible.builtin.file: path=/home/{{ remnux_user }}/.config/codef00.com state=directory mode=0755 owner={{ remnux_user }}
- name: Check /usr/share/remnux/edb.conf is present
  ansible.builtin.stat: path=/usr/share/remnux/edb.conf
  register: edb
- name: Check user edb config is present
  ansible.builtin.stat: path="/home/{{ remnux_user }}/.config/codef00.com/edb.conf"
  register: edbu
- name: Configure remnux edb config
  ansible.builtin.copy:
    src: /usr/share/remnux/edb.conf
    dest: "/home/{{ remnux_user }}/.config/codef00.com/edb.conf"
    owner: "{{ remnux_user }}"
    mode: '0600'
  when: edb.stat.exists and not edbu.stat.exists
- name: Ensure user edb symbols directory exists
  ansible.builtin.file: path=/home/{{ remnux_user }}/.config/codef00.com/edb-symbols state=directory mode=0755 owner={{ remnux_user }}
- name: Ensure user edb session directory exists
  ansible.builtin.file: path=/home/{{ remnux_user }}/.config/codef00.com/edb-session state=directory mode=0755 owner={{ remnux_user }}
- name: Check user edb configuration
  ansible.builtin.replace:
    dest: "/home/{{ remnux_user }}/.config/codef00.com/edb.conf"
    regexp: "{{ item.regexp }}"
    replace: "{{ item.replace }}"
    mode: '0600'
  with_items:
    - { regexp: /usr/bin/xterm, replace: /usr/bin/lxterminal }
    - { regexp: '^directory.symbol.path=$',
        replace: 'directory.symbol.path=/home/{{ remnux_user }}/.config/codef00.com/edb-symbols'
    }
    - { regexp: '^directory.session.path=$',
        replace: 'directory.session.path=/home/{{ remnux_user }}/.config/codef00.com/edb-session'
    }
    - { regexp: '^directory.plugin.path=$', replace: 'directory.plugin.path=/lib64/edb' }
    - { regexp: '^directory.plugin.path=$HOME$', replace: 'directory.plugin.path=/lib64/edb' }
# Allow non-privileged users to write to Androwarn's Reports directory
- name: validate recursively permissions of /opt/remnux-androwarn/Report
  ansible.builtin.file:
    dest: /opt/remnux-androwarn/Report
    owner: "{{ remnux_user }}"
    group: "{{ remnux_user }}"
    mode: '0755'
    recurse: yes
- name: Symlink js24 in /etc/alternatives/hs
  ansible.builtin.file: src=/usr/bin/js24 dest=/etc/alternatives/js mode=0755 state=link
- name: use remnux wget configuration
  ansible.builtin.copy:
    src: /usr/share/remnux/wget.conf
    dest: "/home/{{ remnux_user }}/.wgetrc"
    mode: '0600'
    owner: "{{ remnux_user }}"
- name: ensure permission of wget user configuration
  ansible.builtin.file:
    dest: "/home/{{ remnux_user }}/.wgetrc"
    mode: '0600'
    owner: "{{ remnux_user }}"
- name: use remnux curl configuration
  ansible.builtin.copy:
    src: /usr/share/remnux/curl.conf
    dest: "/home/{{ remnux_user }}/.curlrc"
    mode: '0600'
    owner: "{{ remnux_user }}"
- name: ensure permission of curl user configuration
  ansible.builtin.file:
    dest: "/home/{{ remnux_user }}/.curlrc"
    mode: '0600'
    owner: "{{ remnux_user }}"
- name: disable update check of wxHexEditor
  ansible.builtin.lineinfile:
    dest: "/home/{{ remnux_user }}/.wxHexEditor"
    regexp: "^UpdateCheck=.*"
    line: 'UpdateCheck=0'
    mode: '0600'
    owner: "{{ remnux_user }}"
    create: yes

- name: Setting LXDE options
  # Set up LXTerminal to start automatically when the user logs in
  ansible.builtin.file: path=/home/{{ remnux_user }}/.config/autostart state=directory mode=0700 owner={{ remnux_user }}
- name: Configure lxterminal autostart
  ansible.builtin.copy:
    owner: "{{ remnux_user }}"
    src: /var/lib/menu-xdg/applications/menu-xdg/X-Debian-Applications-Terminal-Emulators-lxterminal.desktop
    dest: "/home/{{ remnux_user }}/.config/autostart/X-Debian-Applications-Terminal-Emulators-lxterminal.desktop"
    mode: '0600'
- name: Ensure user lxterminal directory exists
  ansible.builtin.file: path=/home/{{ remnux_user }}/.config/lxterminal state=directory mode=0755 owner={{ remnux_user }}
- name: Configure remnux lxterminal.conf
  ansible.builtin.copy:
    src: /usr/share/remnux/lxterminal.conf
    dest: "/home/{{ remnux_user }}/.config/lxterminal/lxterminal.conf"
    mode: '0600'
    owner: "{{ remnux_user }}"
# Set up LXDE app launch bar options, including which icons should be displayed there
- name: Ensure user LXDE panels directory exists
  ansible.builtin.file: path=/home/{{ remnux_user }}/.config/lxpanel/LXDE/panels state=directory mode=0755 owner={{ remnux_user }}
- name: Configure remnux app-launch-bar.conf
  ansible.builtin.copy:
    src: "/usr/share/remnux/app-launch-bar.conf"
    dest: "/home/{{ remnux_user }}/.config/lxpanel/LXDE/panels/panel"
    owner: "{{ remnux_user }}"
    mode: '0600'
# Disable console messages that are shown when the system boots up and shuts down
- name: Disable console output in rc.conf
  ansible.builtin.replace:
    dest: /etc/init/rc.conf
    regexp: '^console output'
    replace: '#console output'
    mode: '0644'

# Set up the desktop to user the REMnux logo
- name: Ensure LXDE panels directory exists
  ansible.builtin.file: path=/home/{{ remnux_user }}/.config/pcmanfm/LXDE/panels state=directory mode=0755 owner={{ remnux_user }}
- name: Check src pcmanfm.conf exists
  ansible.builtin.stat: path=/home/{{ remnux_user }}/.config/pcmanfm/LXDE/pcmanfm.conf
  register: pcmanfmconf
- name: Check target pcmanfm.conf
  ansible.builtin.stat: path=/usr/share/remnux/pcmanfm.conf
  register: pcmanfmconforig
- name: Install Remnux pcmanfm config
  ansible.builtin.copy:
    src: /usr/share/remnux/pcmanfm.conf
    dest: "/home/{{ remnux_user }}/.config/pcmanfm/LXDE/pcmanfm.conf"
    mode: '0644'
    owner: "{{ remnux_user }}"
  when: >
    not pcmanfmconf.stat.exists and pcmanfmconforig.stat.exists and
    remnux_x11_background is defined and remnux_x11_background

# Set up links to match the setup of older REMnux versions
- name: Applying REMnux backwards compatibility settings
  ansible.builtin.file: path=/usr/local/etc state=directory mode=0755

- name: Symlink objects.js
  ansible.builtin.file: src=/usr/share/remnux/objects.js dest=/usr/local/etc/def.js mode=0755 state=link

- name: Ensure MalwareCrawler directory exists
  ansible.builtin.file: path=/usr/local/MalwareCrawler state=directory mode=0755

- name: Symlink ragpicker
  ansible.builtin.file: src=/opt/remnux-ragpicker dest=/usr/local/MalwareCrawler/src mode=0755 state=link

- name: Check /media/cdrom
  ansible.builtin.stat: path=/media/cdrom
  register: mcdrom
- name: Symlink /media/cdrom to /mnt/cdrom
  ansible.builtin.file: src=/mnt/cdrom dest=/media/cdrom mode=0755 state=link
  when: not mcdrom.stat.exists

- name: Symlink balbuzard
  ansible.builtin.file: src=/opt/remnux-balbuzard dest=/usr/local/balbuzard mode=0755 state=link
