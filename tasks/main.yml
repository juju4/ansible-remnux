---

- name: FATAL
  ansible.builtin.fail: msg="This role is only compatible with Ubuntu x86_64"
  when: ansible_distribution != 'Ubuntu' or ansible_architecture != 'x86_64'

- name: Include version-specific variables for Ubuntu.
  ansible.builtin.include_vars: "{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml"
  when: ansible_distribution == 'Ubuntu'

## fails under lxd+systemd, https://github.com/ansible/ansible-modules-core/issues/5582
- name: Set remnux hostname
  ansible.builtin.hostname: name={{ remnux_hostname }}
  when: remnux_hostname is defined
  failed_when: false
- name: Add new hostname in /etc/hosts (local resolv)
  ansible.builtin.replace:
    dest: '/etc/hosts'
    regexp: '^127.0.0.1       localhost'
    replace: '127.0.0.1       localhost {{ remnux_hostname }}'
    mode: '0644'
  when: remnux_hostname is defined

- name: Check support of foreign architectures
  ansible.builtin.command: dpkg --print-foreign-architectures
  register: archi
  changed_when: False
  when: ansible_architecture == 'x86_64'
- name: X86_64 arch
  block:
    - name: Ensure both i386/x86_64 architecture support for packages
      ansible.builtin.command: dpkg --add-architecture i386
      when: archi.stdout.find('i386') == -1
  when: ansible_architecture == 'x86_64'

## https://remnux.org/docs/distro/get/#install-remnux-on-an-existing-system
- import_tasks: remnux.yml
  when: remnux_do_remnux | bool
  tags:
    - remnux

- name: Restrict sshd config
  ansible.builtin.lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    mode: '0644'
    backup: yes
  with_items:
    - { regexp: '^PasswordAuthentication', line: 'PasswordAuthentication no' }
    - { regexp: '^PermitRootLogin', line: 'PermitRootLogin without-password' }

## https://answers.launchpad.net/ubuntu/+source/snort/+question/262496
- name: Ubuntu | snort noninteractive settings - dir
  ansible.builtin.file: dest=/etc/snort state=directory mode=0755
- name: Ensure ansible variable is populated
  ansible.builtin.setup:
    filter: ansible_default_ipv4
- name: Ubuntu | snort noninteractive settings - conf
  ansible.builtin.lineinfile: dest=/etc/snort/snort.debian.conf line="{{ item }}" mode=0755 backup=yes create=yes
  with_items:
    - 'DEBIAN_SNORT_HOME_NET="any"'
    - "DEBIAN_SNORT_INTERFACE=\"{{ ansible_default_ipv4.address }}\""

- import_tasks: x11.yml
  when: remnux_do_x11 is defined and remnux_do_x11

- name: Review some limits  # noqa no-tabs
  ansible.builtin.lineinfile:
    dest: /etc/security/limits.d/openfiles
    regexp: "^{{ remnux_user }}\t\thard\tnofiles\t\t2048"
    line: "{{ remnux_user }}\t\thard\tnofiles\t\t2048"
    mode: '0644'
    state: present
    create: yes

- name: Check if release-upgrades file exist
  ansible.builtin.stat: path=/etc/update-manager/release-upgrades
  register: rupgrades
- name: Disable GUI upgrade prompt
  ansible.builtin.replace:
    dest: /etc/update-manager/release-upgrades
    regexp: '^Prompt=.*'
    replace: 'Prompt=never'
    mode: '0644'
  when: rupgrades.stat.exists

- name: Check ruby spec permissions
  ansible.builtin.file: "dest=/home/{{ remnux_user }}/.gem/specs state=directory mode=0755 owner={{ remnux_user }}"

- import_tasks: remnux-cli.yml
